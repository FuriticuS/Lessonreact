{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/paginator/Paginator.js","components/users/User.js","components/users/Users.js","redux/reducer/user-selectors.js","components/users/UsersContainer.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","Paginator","props","pagesCount","Math","ceil","totalUsersCount","pageSize","pages","portionCount","portionSize","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","console","log","className","onClick","filter","p","map","currentPage","onPageChanged","User","to","id","src","photos","small","alt","followed","disabled","followingInProcess","some","unfollow","follow","name","status","Users","users","user","key","getUser","state","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","isFetching","getFollowingInProcess","UsersAPIComponent","pageNumber","getUsers","this","getPages","Preloader","React","Component","UserContainerCompose","compose","connect","followAC","unFollowAC","setCurrentPage","setCurrentPageAC","toggleFollowingProgress","getPagesThunkCreator","getUsersThunkCreator"],"mappings":"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","file":"static/js/5.104d3594.chunk.js","sourcesContent":["import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, {useState} from \"react\";\r\n\r\nimport './paginator.css';\r\n\r\nconst Paginator = (props) => {\r\n    // высчитывает количество кнопочек(страниц), округляем их в большую сторону и отображаем\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    // создаем вывод страниц по 10 шт\r\n    let portionCount = Math.ceil(pagesCount / props.portionSize);\r\n\r\n    // берем state из реакта - глобальный стейт\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber-1)*props.portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber*props.portionSize;\r\n\r\n    console.log(portionNumber, props.portionSize, pagesCount, props.portionSize);\r\n\r\n    return (\r\n        <div className=\"paginator\">\r\n\r\n            {/*переход на первую страницу*/}\r\n            { portionNumber > 1 &&\r\n                <button onClick={() => setPortionNumber(1)}>&lArr;</button>\r\n            }\r\n\r\n            {/*переход на 1 страницу назад*/}\r\n            { portionNumber > 1 &&\r\n\r\n                <button onClick={ () => setPortionNumber(portionNumber - 1)}>&larr;</button>\r\n\r\n            }\r\n            {/*вывод страниц по 10 шт */}\r\n            <ul className=\"page-number\">\r\n                {pages.filter(p => p>= leftPortionPageNumber && p<= rightPortionPageNumber).map((p) => {\r\n                    return (\r\n                        <li\r\n                            className={props.currentPage === p && \"selectedPage\"}\r\n                            onClick={() => {\r\n                                props.onPageChanged(p);\r\n                            }}>\r\n                            {p}\r\n                        </li>\r\n                    )\r\n                })}\r\n            </ul>\r\n\r\n            {/*переход на 1 страницу вперед*/}\r\n            { portionCount > portionNumber &&\r\n                <button onClick={() => setPortionNumber(portionNumber + 1)}>&rarr;</button>\r\n            }\r\n\r\n            {/*переход на последнюю страницу*/}\r\n            { portionCount > portionNumber &&\r\n                <button onClick={() => setPortionNumber(portionCount)}>&rArr;</button>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Paginator;\r\n","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nimport './user.css';\r\n\r\nconst User = (props) => {\r\n\r\n    return (\r\n        <div className=\"user\">\r\n\r\n            <div className=\"left-user\">\r\n                <div className=\"left-user-img\">\r\n                    <NavLink to={'/profile/' + props.id}>\r\n                        {/*если в запросе user.photos.small нет картинки (NULL) то захардкодим иконкой своей*/}\r\n                        <img\r\n                            src={props.photos.small != null ? props.photos.small : \"https://image.flaticon.com/icons/png/512/17/17797.png\"}\r\n                            alt=\"avatar\"/>\r\n                    </NavLink>\r\n                </div>\r\n\r\n                <div className=\"left-user-button\">\r\n                    {/*если user follow то покажем одну кнопку если нет то другую*/}\r\n                    {props.followed\r\n                        ?\r\n                        <button disabled={props.followingInProcess.some(id => id === props.id)} onClick={() => {\r\n                            props.unfollow(props.id)\r\n                        }}>Unfollow</button>\r\n                        :\r\n                        <button disabled={props.followingInProcess.some(id => id === props.id)} onClick={() => {\r\n                            props.follow(props.id)\r\n                        }}>Follow</button>\r\n                    }\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"right-user\">\r\n                <div className=\"right-user-name\">\r\n                    <div className=\"right-user-name-user\">{props.name}</div>\r\n                    <div className=\"right-user-name-status\">{props.status}</div>\r\n                </div>\r\n                <div className=\"right-user-city\">\r\n                    <div className=\"right-user-city-country\">{\"user.location.country\"}</div>\r\n                    <div className=\"right-user-city-city\">{\"user.location.city\"}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default User;\r\n","import React from \"react\";\r\nimport Paginator from \"../paginator/Paginator\";\r\nimport User from \"./User\";\r\n\r\nimport './user.css';\r\n\r\nconst Users = (props) => {\r\n\r\n    return (\r\n        <div className=\"users\">\r\n            {/*Paginator - компонента для вывода страниц пользователей в нормальном виде*/}\r\n            <Paginator\r\n                currentPage={props.currentPage}\r\n                onPageChanged={props.onPageChanged}\r\n                totalUsersCount={props.totalUsersCount}\r\n                pageSize={props.pageSize}\r\n                portionSize={10}\r\n            />\r\n\r\n            <div className=\"users-page\">\r\n                {/*компонента для вывода пользователей*/}\r\n                {props.users.map(user => <User\r\n                    key={user.id}\r\n\r\n                    id={user.id}\r\n                    user={user.user}\r\n                    name={user.name}\r\n                    status={user.status}\r\n                    photos={user.photos}\r\n\r\n                    followed={props.follow}\r\n                    unfollow={props.unfollow}\r\n                    followingInProcess={props.followingInProcess}\r\n                />)\r\n                }\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Users;\r\n","// селектор для страницы user-container который будет отдавать все данные для map\r\n// селектор принимает на входе state и возвращает какое-то значение, в нашем случае часть state\r\nexport const getUser = (state) => {\r\n    return state.usersPage.users;\r\n}\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n}\r\n\r\nexport const getFollowingInProcess = (state) => {\r\n    return state.usersPage.followingInProcess;\r\n}\r\n\r\n","import React from \"react\";\r\nimport Users from \"./Users\";\r\n\r\nimport {connect} from \"react-redux\";\r\n\r\nimport {\r\n    followAC,\r\n    unFollowAC,\r\n    setCurrentPageAC,\r\n    toggleFollowingProgress,\r\n    getPagesThunkCreator,\r\n    getUsersThunkCreator\r\n} from \"../../redux/reducer/userPage\";\r\n\r\nimport Preloader from \"../preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProcess, getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUser\r\n} from \"../../redux/reducer/user-selectors\";\r\n\r\n//------------------------------------------container -----------------------------------------------------//\r\n// создадим классовую компоненту\r\nclass UsersAPIComponent extends React.Component {\r\n\r\n    // можно не использовать тк ничего внутри не происходит кроме получения props\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    // метод который вызовется только при открытии странички User\r\n    // вызов будет только после отрисовки компоненты User\r\n    componentDidMount() {\r\n        //--- вызов всех диспачей с функции connect(внизу)\r\n        this.props.getPages(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n    // получаем новые странички\r\n    onPageChanged = (pageNumber) => {\r\n        //--- вызов всех диспачей с функции connect(внизу)\r\n        this.props.getUsers(pageNumber, this.props.pageSize);\r\n    }\r\n\r\n    // метод который возращает JSX (обязательно нужен в классовой компоненте)\r\n    render() {\r\n        return(\r\n            <div>\r\n                {/*preloader для наших страниц*/}\r\n                {this.props.isFetching ? <Preloader /> : null}\r\n\r\n                <Users\r\n                    totalUsersCount = {this.props.totalUsersCount}\r\n                    pageSize = {this.props.pageSize}\r\n                    currentPage = {this.props.currentPage}\r\n                    users={this.props.users}\r\n                    follow={this.props.follow}\r\n                    unfollow={this.props.unfollow}\r\n                    followingInProcess={this.props.followingInProcess}\r\n\r\n                    onPageChanged={this.onPageChanged}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n//------------------------------------------container -----------------------------------------------------//\r\n//-- принимает весь State целиком уже с redux через redux-store и хранит данные для страницы user с props = user, позже мы его пробросили через user-selectors и получили все функции\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUser(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProcess: getFollowingInProcess(state)\r\n    }\r\n}\r\n\r\n//Это утилита из Redux для удобства вывода нескольких функций подряд\r\n// UsersAPIComponent -> WithAuthRedirect -> withRouter -> connect\r\nlet UserContainerCompose = compose(\r\n    // WithAuthRedirect, - проверка авторизации пользователя(можно отключить)\r\n    connect(mapStateToProps,{\r\n    follow:followAC,\r\n    unfollow:unFollowAC,\r\n    setCurrentPage: setCurrentPageAC,\r\n    toggleFollowingProgress:toggleFollowingProgress,\r\n    getPages:getPagesThunkCreator,\r\n    getUsers: getUsersThunkCreator}))(UsersAPIComponent)\r\n\r\n//-- закинем вторым параметром ссылки на нужные action create из файла userPage\r\nexport default UserContainerCompose;\r\n"],"sourceRoot":""}